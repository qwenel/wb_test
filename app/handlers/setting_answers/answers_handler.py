from aiogram import F, Router
from aiogram.types import CallbackQuery, Message
from aiogram.fsm.context import FSMContext

from api.wb.validChecks import is_valid_api_key
from app.database.shop_methods import delete_shop_if_null, toggle_auto_ans, toggle_manual_ans
from app.database.shop_settings import set_api_key
from app.keyboards.callbacks import callbacks as cb
from app.keyboards import inlineKeyboards as in_kb
from app.states.userStates import UserStates


router_answers = Router()


# ======= GET SHOP AUTO ANSWER STATUS
@router_answers.message(UserStates.awaiting_api_key)
async def got_api_key(message : Message, state: FSMContext):

    if not await is_valid_api_key(message.text):
        await message.answer(text="API-–∫–ª—é—á –≤–≤–µ–¥—ë–Ω –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!\n\n"+
                             "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑: ",
                             reply_markup=in_kb.go_back_from_shop_name_keyboard)
        return
    
    data = await state.get_data()
    
    if not await set_api_key(message.chat.id, data["shop_name"], message.text):
        await delete_shop_if_null(message.from_user.id)
        await message.answer(text="–ü—Ä–æ–∏–∑–æ—à–ª–∞ –≤–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤–≤–æ–¥–µ api_key\n\n"+
                             "–í–µ—Ä–æ—è—Ç–Ω–∞—è –ø—Ä–∏—á–∏–Ω–∞ –æ—à–∏–±–∫–∏: API-–∫–ª—é—á–∏ —É–∂–µ –∑–∞—Ä–µ–≥–µ—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω\n"+
                             "–ò–∑–≤–∏–Ω–∏—Ç–µ –∑–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ –Ω–µ—É–¥–æ–±—Å—Ç–≤–∞, –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–∑–¥–Ω–µ–µ...",
                             reply_markup=in_kb.go_to_main_menu_keyboard)
        await state.clear()
        await state.set_state(UserStates.menu)
        return
    
    await state.update_data(api_key=message.text)
    await state.set_state(UserStates.awaiting_auto_choose)
    
    await message.answer(text=f"–£—Ä–∞, –ú–∞–≥–∞–∑–∏–Ω \"{data["shop_name"]}\" —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ωüéâ\n\n"+
                        "–ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ –≤—ã–±—Ä–∞—Ç—å, –æ—Ç–≤–µ—á–∞—Ç—å –Ω–∞ –æ—Ç–∑—ã–≤—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∏–ª–∏ –≤—Ä—É—á–Ω—É—é.\n\n"+
                        "–ê –∏–º–µ–Ω–Ω–æ\n\n–ë–æ—Ç —Å–º–æ–∂–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å –æ—Ç–≤–µ—Ç—ã –Ω–∞ –æ—Ç–∑—ã–≤—ã —Å –≤—ã–±—Ä–∞–Ω–Ω—ã–º–∏ –≤–∞–º–∏ —Ñ–∏–ª—å—Ç—Ä–∞–º–∏.\n\n"+
                        "–õ–∏–±–æ –∂–µ, —Ä–æ–±–æ—Ç –±—É–¥–µ—Ç –ø—Ä–∏—Å—ã–ª–∞—Ç—å –≤–∞–º —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∏–º –æ—Ç–≤–µ—Ç—ã –Ω–∞ –æ–¥–æ–±—Ä–µ–Ω–∏–µ, –∞ –≤—ã –±—É–¥–µ—Ç–µ —Ä–µ—à–∞—Ç—å, –ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å –æ—Ç–≤–µ—Ç –∏–ª–∏ –Ω–µ—Ç.\n\n"+
                        "–û—Ç–≤–µ—á–∞—Ç—å –Ω–∞ –≤–∞—à–∏ –æ—Ç–∑—ã–≤—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏? ‚§µÔ∏è",
                        reply_markup=in_kb.decide_auto_ans_keyboard)    
    

# ======= GOT AUTO FOR AUTO ANSWERS
@router_answers.callback_query(UserStates.awaiting_auto_choose, F.data==cb.yes_auto)    
async def yes_auto_answer(callback_query: CallbackQuery, state: FSMContext):
    await state.set_state(UserStates.awaiting_rating)
    
    data = await state.get_data()
    
    await callback_query.answer()
    
    if not await toggle_auto_ans(callback_query.from_user.id, data["shop_name"]):
        callback_query.message.answer(text="–ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞.",
                                      reply_markup=in_kb.go_to_main_menu_keyboard)
        await state.set_state(UserStates.menu)
        await state.clear()
    
    await callback_query.message.edit_text(text="–û—Ç–ª–∏—á–Ω–æ! –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞.\n\n"+
                                           "–ó–¥–µ—Å—å –∂–µ –≤—ã –º–æ–∂–µ—Ç–µ –≥–∏–±–∫–æ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å, –∫–∞–∫ –±–æ—Ç –±—É–¥–µ—Ç –æ—Ç–≤–µ—á–∞—Ç—å –Ω–∞ –≤–∞—à–∏ –æ—Ç–∑—ã–≤—ã, –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –∏—Ö –æ—Ü–µ–Ω–∫–∏.\n\n"+
                                            "–ù–∞–ø—Ä–∏–º–µ—Ä\n\n–í—ã –º–æ–∂–µ—Ç–µ –≤—ã–±—Ä–∞—Ç—å, —á—Ç–æ–±—ã –Ω–∞ –≤—Å–µ –æ—Ç–∑—ã–≤—ã —Å –æ—Ü–µ–Ω–∫–æ–π 5 –∏ 4 –∑–≤–µ–∑–¥—ã –±–æ—Ç –æ—Ç–≤–µ—á–∞–ª –≤ –ø–æ–ª–Ω–æ—Å—Ç—å—é –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–º —Ä–µ–∂–∏–º–µ.\n\n"+
                                            "–ù–∞ –≤—Å–µ –æ—Å—Ç–∞–ª—å–Ω—ã–µ –æ—Ç–∑—ã–≤—ã [—Å –æ—Ü–µ–Ω–∫–∞–º–∏ 3, 2, 1 –∑–≤–µ–∑–¥–∞] –±–æ—Ç –±—É–¥–µ—Ç —Å–æ–∑–¥–∞–≤–∞—Ç—å –æ—Ç–≤–µ—Ç, –Ω–æ –±—É–¥–µ—Ç –ø—Ä–∏—Å—ã–ª–∞—Ç—å –≤–∞–º –Ω–∞ —Å–æ–≥–ª–∞—Å–æ–≤–∞–Ω–∏–µ.\n\n"+
                                            "–í –∫–∞–∫–æ–º —Ñ–æ—Ä–º–∞—Ç–µ –æ—Ç–≤–µ—á–∞—Ç—å –Ω–∞ –≤–∞—à–∏ –æ—Ç–∑—ã–≤—ã? ‚§µÔ∏è",
                                            reply_markup=in_kb.setting_ratings_keyboard)
    
# ------- UNIVERSAL FOR BOTH SETTING AND ADDING NEW SHOP
# ======= GOT MANUAL FOR AUTO ANSWERS
@router_answers.callback_query(F.data==cb.no_auto)    
async def no_auto_answer(callback_query: CallbackQuery, state: FSMContext):
    
    data = await state.get_data()
    await state.set_state(UserStates.menu)
    await state.clear()
    await callback_query.answer()
    
    if not await toggle_manual_ans(callback_query.from_user.id, data["shop_name"]):
        callback_query.message.answer(text="–ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞.",
                                      reply_markup=await in_kb.go_back_from_settings_errors_kb(data["shop_name"]))
    
    await callback_query.message.edit_text(text="–ü—Ä–∏–Ω—è—Ç–æ, –ë–æ—Å—Å)\n\n–ü–æ—à–µ–ª —Ä–∞–±–æ—Ç–∞—Ç—å!\n\n"+
                                           "–Ø –±—É–¥—É –æ—Ç–≤–µ—á–∞—Ç—å –Ω–∞ –æ—Ç–∑—ã–≤—ã –≤ –†–£–ß–ù–û–ú —Ä–µ–∂–∏–º–µ",
                                        reply_markup=in_kb.go_to_main_menu_keyboard)
    
    
    
# ======= GET SETTING AUTO STATUS
@router_answers.callback_query(UserStates.chosen_shop, F.data==cb.setting_auto)
async def set_new_auto(callback_query: CallbackQuery, state: FSMContext):
    await state.set_state(UserStates.toggle_auto)

    data = await state.get_data()
    
    await callback_query.message.edit_text(text=f"–ó–¥–µ—Å—å –¥–ª—è –º–∞–≥–∞–∑–∏–Ω–∞ \"{data["shop_name"]}\" –≤—ã –º–æ–∂–µ—Ç–µ –≤—ã–±—Ä–∞—Ç—å, –æ—Ç–≤–µ—á–∞—Ç—å –Ω–∞ –æ—Ç–∑—ã–≤—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∏–ª–∏ –≤—Ä—É—á–Ω—É—é.\n\n"+
                        "–ê –∏–º–µ–Ω–Ω–æ\n\n–ë–æ—Ç —Å–º–æ–∂–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å –æ—Ç–≤–µ—Ç—ã –Ω–∞ –æ—Ç–∑—ã–≤—ã —Å –≤—ã–±—Ä–∞–Ω–Ω—ã–º–∏ –≤–∞–º–∏ —Ñ–∏–ª—å—Ç—Ä–∞–º–∏.\n\n"+
                        "–õ–∏–±–æ –∂–µ, —Ä–æ–±–æ—Ç –±—É–¥–µ—Ç –ø—Ä–∏—Å—ã–ª–∞—Ç—å –≤–∞–º —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∏–º –æ—Ç–≤–µ—Ç—ã –Ω–∞ –æ–¥–æ–±—Ä–µ–Ω–∏–µ, –∞ –≤—ã –±—É–¥–µ—Ç–µ —Ä–µ—à–∞—Ç—å, –ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å –æ—Ç–≤–µ—Ç –∏–ª–∏ –Ω–µ—Ç.\n\n"+
                        "–í –∫–∞–∫–æ–º —Ñ–æ—Ä–º–∞—Ç–µ –æ—Ç–≤–µ—á–∞—Ç—å –Ω–∞ –≤–∞—à–∏ –æ—Ç–∑—ã–≤—ã? ‚§µÔ∏è",
                        reply_markup=in_kb.decide_auto_ans_keyboard)
    
    await callback_query.answer()
    

# ======= GOT AUTO FOR AUTO ANSWERS
@router_answers.callback_query(UserStates.toggle_auto, F.data==cb.yes_auto)    
async def toggle_to_auto(callback_query: CallbackQuery, state: FSMContext):

    data = await state.get_data()
    
    await callback_query.answer()
    await state.set_state(UserStates.menu)
    await state.clear()
    
    if not await toggle_auto_ans(callback_query.from_user.id, data["shop_name"]):
        await callback_query.message.answer(text="–ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞.",
                                      reply_markup=await in_kb.go_back_from_settings_errors_kb(data["shop_name"]))        
    
    await callback_query.message.edit_text(text="–ü—Ä–∏–Ω—è—Ç–æ, –ë–æ—Å—Å)\n\n–ü–æ—à–µ–ª —Ä–∞–±–æ—Ç–∞—Ç—å!\n\n"+
                                           "–Ø –±—É–¥–µ—Ç –æ—Ç–≤–µ—á–∞—Ç—å –Ω–∞ –æ—Ç–∑—ã–≤—ã –≤ –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–û–ú —Ä–µ–∂–∏–º–µ",
                                        reply_markup=in_kb.go_to_main_menu_keyboard)