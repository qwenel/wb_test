from aiogram import F, Router
from aiogram.types import Message, CallbackQuery, FSInputFile
from aiogram.fsm.context import FSMContext

from ..states.userStates import UserStates

import app.keyboards.inlineKeyboards as in_kb
import app.keyboards.callbacks.callbacks as cb

from ..database.shop_methods import (
    add_shop, delete_shop_if_null, delete_shop
)

from .setting_rating.rating_handler import router_rating
from .setting_answers.answers_handler import router_answers


router_shop = Router()
router_shop.include_routers(
    router_rating,
    router_answers
)


# ======= GET SHOP NAME
@router_shop.callback_query(F.data == cb.add_shop)
async def ask_shop_name(callback_query: CallbackQuery, state: FSMContext): 
    await delete_shop_if_null(callback_query.from_user.id)
    
    await state.set_state(UserStates.awaiting_shop_name)
    
    if callback_query.message.photo:
        await callback_query.message.delete()
        await callback_query.message.answer(text="–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –º–∞–≥–∞–∑–∏–Ω–∞",
                                           reply_markup=in_kb.go_to_main_menu_keyboard)
    else:
        await callback_query.message.edit_text(text="–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –º–∞–≥–∞–∑–∏–Ω–∞",
                                           reply_markup=in_kb.go_to_main_menu_keyboard)
    await callback_query.answer()
    

# ======= GET SHOP API KEY
@router_shop.message(UserStates.awaiting_shop_name)
async def got_shop_name(message : Message, state: FSMContext):
    await delete_shop_if_null(message.from_user.id)
    
    if not await add_shop(telegram_id=message.chat.id, shop_name=message.text):
        await message.answer(text="–ù–∞–∑–≤–∞–Ω–∏–µ –º–∞–≥–∞–∑–∏–Ω–∞ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!\n"+
                       "\n–ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–æ–±–ª—é–¥–µ–Ω–∏–µ —Å–ª–µ–¥—É—é—â–∏—Ö –∫—Ä–∏—Ç–µ—Ä–∏–µ–≤:\n"+
                       "\t - –î–ª–∏–Ω–∞ –Ω–∞–∑–≤–∞–Ω–∏—è –º–∞–≥–∞–∑–∏–Ω–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –Ω–µ –±–æ–ª–µ–µ 32 —Å–∏–º–≤–æ–ª–æ–≤\n"+
                       "\t - –ù–∞–∑–≤–∞–Ω–∏–µ –≤–∞—à–µ–≥–æ –º–∞–≥–∞–∑–∏–Ω–∞ –Ω–µ –¥–æ–ª–∂–Ω–æ –ø–æ–≤—Ç–æ—Ä—è—Ç—å—Å—è —Å—Ä–µ–¥–∏ –≤–∞—à–∏—Ö –¥—Ä—É–≥–∏—Ö\n"+
                       "\n\n–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –º–∞–≥–∞–∑–∏–Ω–∞:",
                       reply_markup=in_kb.go_to_main_menu_keyboard)
        return
    
    await state.update_data(shop_name=message.text)
    
    await state.set_state(UserStates.awaiting_api_key)
    
    photo = FSInputFile("res/images/get_api.jpg")
    
    await message.answer_photo(photo=photo,
                               caption=f"‚òùÔ∏è–ß—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å –∞–∫—Ç—É–∞–ª—å–Ω—ã–π —Ç–æ–∫–µ–Ω –≤ –º–∞–≥–∞–∑–∏–Ω \"{message.text}\", –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —Å–¥–µ–ª–∞—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ —à–∞–≥–æ–≤:\n\n"+
                               "1. –ó–∞–π–¥–∏—Ç–µ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –î–æ—Å—Ç—É–ø –∫ API - https://seller.wildberries.ru/supplier-settings/access-to-api"+
                               "\n\n2. –í—ã–±–µ—Ä–∏—Ç–µ –¢–∏–ø —Ç–æ–∫–µ–Ω–∞ - ¬´–í–æ–ø—Ä–æ—Å—ã –∏ –æ—Ç–∑—ã–≤—ã¬ª\n\n"+
                               "3. –ù–ï —Å—Ç–∞–≤—å—Ç–µ –≥–∞–ª–æ—á–∫—É –≤ –æ–ø—Ü–∏–∏ ¬´–¢–æ–ª—å–∫–æ –¥–ª—è —á—Ç–µ–Ω–∏—è¬ª. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –µ–µ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–µ\n\n"+
                               "4. –ù–∞–∂–º–∏—Ç–µ ¬´–°–æ–∑–¥–∞—Ç—å¬ª\n\n–ü–æ—Å–ª–µ —ç—Ç–æ–≥–æ –≤–≤–µ–¥–∏—Ç–µ —Å–æ–∑–¥–∞–Ω–Ω—ã–π —Ç–æ–∫–µ–Ω –≤ –ø–æ–ª–µ –Ω–∏–∂–µ ‚¨áÔ∏è\n\n"+
                               "–í—Å–µ —Ç–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –º–∞–≥–∞–∑–∏–Ω–∞ —Å–æ—Ö—Ä–∞–Ω—è—Ç—Å—èüëå",
                               reply_markup=in_kb.go_back_from_shop_name_keyboard)
       
    
# ======= CHOSEN SHOP MENU (SETTINGS : AUTO, FILTER, DELETE)    
@router_shop.callback_query(UserStates.shop_list, F.data[:5] == cb.settings)    
async def shop_chosen(callback_query: CallbackQuery, state: FSMContext):
    await state.set_state(UserStates.chosen_shop)
    
    _shop_name = callback_query.data[5:]
    
    await state.update_data(shop_name=_shop_name)
    
    await callback_query.message.edit_text(text=f"–í—ã–±—Ä–∞–Ω –º–∞–≥–∞–∑–∏–Ω => \"{_shop_name}\"",
                        reply_markup=in_kb.chosen_shop_menu_keyboard)
    
    await callback_query.answer()
    
    
# ======== SETTING DELETING
@router_shop.callback_query(UserStates.chosen_shop, F.data==cb.delete_shop)
async def del_shop(callback_query: CallbackQuery, state: FSMContext):
    data = await state.get_data()
    
    shop_to_delete = data["shop_name"]
    
    if not await delete_shop(callback_query.from_user.id, shop_name=shop_to_delete):
        await state.set_state(UserStates.shop_list)
        await callback_query.message.answer(text="–ü–æ –∫–∞–∫–æ–π-—Ç–æ –ø—Ä–∏—á–∏–Ω–µ —É–¥–∞–ª–µ–Ω–∏–µ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ\n\n"+
                                      "–ò–∑–≤–∏–Ω–∏—Ç–µ –∑–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ –Ω–µ—É–¥–æ–±—Å—Ç–≤–∞, —Ä–∞–∑–±–∏—Ä–∞–µ–º—Å—è...",
                                      reply_markup=await in_kb.go_back_from_settings_errors_kb(shop_to_delete))
    
    await state.clear()
    await state.set_state(UserStates.menu)
    
    await callback_query.message.edit_text(text=f"–í—ã —É–¥–∞–ª–∏–ª–∏ –º–∞–≥–∞–∑–∏–Ω \"{shop_to_delete}\".",
                                           reply_markup=in_kb.go_to_main_menu_keyboard)
    await callback_query.answer()