from aiogram import F, Bot, Router
from aiogram.types import Message, CallbackQuery
from aiogram.filters import CommandStart
from aiogram.fsm.context import FSMContext

from ..database.user_methods import add_user, get_balance

from ..keyboards.inlineKeyboards import (
    starting_keyboard,
    main_menu_keyboard,
    shop_list_build,
    balance_menu_keyboard,
    support_menu,
    answers_menu_keyboard,
)
from ..states.userStates import UserStates
from .shop_handler import router_shop
from .balance_handler import router_balance
from .feedbacks_handler import router_answers
from .support_handler import router_support

import app.keyboards.callbacks.callbacks as cb


router_main = Router()
router_main.include_routers(router_shop, router_answers, router_balance, router_support)


# Starting!!!
@router_main.message(CommandStart())
async def start_msg(message: Message, state: FSMContext):
    await state.clear()
    await state.set_state(UserStates.started)

    if not await add_user(message.chat.id):
        pass

    await message.answer(
        text="–ü—Ä–∏–≤–µ—Ç, —ç—Ç–æ —Å–µ—Ä–≤–∏—Å –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç–∞ —Ä–∞–∑—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–π –¥–ª—è Wildberries @iiwbbot ‚úåÔ∏è\n\n"
        + "–Ø —Ä–∞–±–æ—Ç–∞—é –Ω–∞ –æ—Å–Ω–æ–≤–µ –ò—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç–∞ –∏ —É–º–µ—é –ø–æ–ª–Ω–æ—Å—Ç—å—é –∞–≤—Ç–æ–Ω–æ–º–Ω–æ –æ—Ç–≤–µ—á–∞—Ç—å –Ω–∞ –æ—Ç–∑—ã–≤—ã –∏ –≤–æ–ø—Ä–æ—Å—ã –ø–æ–∫—É–ø–∞—Ç–µ–ª–µ–π –∏ –ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å –∏—Öüî•\n\n"
        + "–Ø —É–º–µ—é —Å–≥–ª–∞–∂–∏–≤–∞—Ç—å –∫–æ–Ω—Ñ–ª–∏–∫—Ç—ã –∏ –º–æ–∏ –æ—Ç–≤–µ—Ç—ã —Å–æ–≤–µ—Ä—à–µ–Ω–Ω–æ –Ω–µ –æ—Ç–ª–∏—á–∞—é—Ç—Å—è –æ—Ç –æ—Ç–≤–µ—Ç–æ–≤ —á–µ–ª–æ–≤–µ–∫–∞üòé\n\n"
        + "–î–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏—Ö –æ—Ç–≤–µ—Ç–æ–≤ –¥–æ–±–∞–≤—å—Ç–µ –º–∞–≥–∞–∑–∏–Ω",
        reply_markup=starting_keyboard,
    )


# Main menu
@router_main.callback_query(F.data == cb.main_menu)
async def main_menu(callback_query: CallbackQuery, state: FSMContext):

    if callback_query.message.document:
        await callback_query.message.answer(
            text="–í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –ø—É–Ω–∫—Ç–æ–≤ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é:",
            reply_markup=main_menu_keyboard,
        )
    else:
        await callback_query.message.edit_text(
            text="–í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –ø—É–Ω–∫—Ç–æ–≤ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é:",
            reply_markup=main_menu_keyboard,
        )

    await state.set_state(UserStates.menu)
    await state.clear()
    await callback_query.answer()


# List of stores
@router_main.callback_query(F.data == cb.shop_list)
async def shop_list(callback_query: CallbackQuery, state: FSMContext):
    await state.set_state(UserStates.shop_list)

    await callback_query.message.edit_text(
        text="–í–∞—à–∏ –º–∞–≥–∞–∑–∏–Ω—ã:",
        reply_markup=await shop_list_build(callback_query.from_user.id),
    )
    await callback_query.answer()


# BOT Answers
@router_main.callback_query(F.data == cb.answers)
async def answers_menu(callback_query: CallbackQuery, state: FSMContext):
    await state.set_state(UserStates.answers_menu)

    await callback_query.message.edit_text(
        text="–ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∞—Ä—Ö–∏–≤–Ω—ã–µ –∏ –Ω–µ–æ—Ç–≤–µ—á–µ–Ω–Ω—ã–µ –æ—Ç–∑—ã–≤—ã. –ß—Ç–æ —Ö–æ—Ç–∏—Ç–µ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å?",
        reply_markup=answers_menu_keyboard,
    )

    await callback_query.answer()


# Balance menu
@router_main.callback_query(F.data == cb.balance)
async def balance_menu(callback_query: CallbackQuery, state: FSMContext):
    await state.set_state(UserStates.balance_menu)

    balance = await get_balance(callback_query.from_user.id)

    await callback_query.message.edit_text(
        text=f"–í–∞–º –¥–æ—Å—Ç—É–ø–Ω–æ <b>{balance}</b> —Ç–æ–∫–µ–Ω–æ–≤ –Ω–∞ –æ—Ç–∑—ã–≤—ã –∏ –≤–æ–ø—Ä–æ—Å—ã.",
        reply_markup=balance_menu_keyboard,
        parse_mode="HTML",
    )

    await callback_query.answer()


# Support message
@router_main.callback_query(F.data == cb.support)
async def support_msg(callback_query: CallbackQuery, state: FSMContext):
    await state.set_state(UserStates.support_menu)
    await callback_query.answer()

    await callback_query.message.edit_text(
        text="–í—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç –º–µ–Ω—é", reply_markup=support_menu
    )


# @router_main.message(Command("getAllUsers"))
# async def getUsersList(message: Message):

#     list_of_users = await get_users()
#     print(list_of_users)

#     if len(list_of_users) == 0:
#         await message.answer(text="–°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø—É—Å—Ç, —á—Ç–æ –æ—á–µ–Ω—å —Å—Ç—Ä–∞–Ω–Ω–æ...")

#     await message.answer(text="–°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:\n\n"+
#                          "\n".join(list_of_users))
