from aiogram import F, Router
from aiogram.types import Message, CallbackQuery, FSInputFile
from aiogram.fsm.context import FSMContext

from ..states.userStates import UserStates

import app.keyboards.inlineKeyboards as in_kb
import app.keyboards.callbacks.callbacks as cb

from ..database.shop_methods import (
    add_shop, delete_shop_if_null, delete_shop
)

from ..database.shop_settings import (
    set_api_key, set_rating
)
from .validChecks import is_valid_api_key


router_shop = Router()


@router_shop.callback_query(F.data == cb.add_shop)
async def ask_shop_name(callback_query: CallbackQuery, state: FSMContext): 
    await delete_shop_if_null(callback_query.from_user.id)
    
    await state.set_state(UserStates.awaiting_shop_name)
    
    await callback_query.message.edit_text(text="–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –º–∞–≥–∞–∑–∏–Ω–∞",
                                           reply_markup=in_kb.go_to_main_menu_keyboard)
    await callback_query.answer()
    

@router_shop.message(UserStates.awaiting_shop_name)
async def got_shop_name(message : Message, state: FSMContext):
    await delete_shop_if_null(message.from_user.id)
    
    if not await add_shop(message.chat.id, message.text):
        await message.answer(text="–ù–∞–∑–≤–∞–Ω–∏–µ –º–∞–≥–∞–∑–∏–Ω–∞ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!\n"+
                       "\n–ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–æ–±–ª—é–¥–µ–Ω–∏–µ —Å–ª–µ–¥—É—é—â–∏—Ö –∫—Ä–∏—Ç–µ—Ä–∏–µ–≤:\n"+
                       "\t - –î–ª–∏–Ω–∞ –Ω–∞–∑–≤–∞–Ω–∏—è –º–∞–≥–∞–∑–∏–Ω–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –Ω–µ –±–æ–ª–µ–µ 32 —Å–∏–º–≤–æ–ª–æ–≤\n"+
                       "\t - –ù–∞–∑–≤–∞–Ω–∏–µ –≤–∞—à–µ–≥–æ –º–∞–≥–∞–∑–∏–Ω–∞ –Ω–µ –¥–æ–ª–∂–Ω–æ –ø–æ–≤—Ç–æ—Ä—è—Ç—å—Å—è —Å—Ä–µ–¥–∏ –≤–∞—à–∏—Ö –¥—Ä—É–≥–∏—Ö\n"+
                       "\n\n–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –º–∞–≥–∞–∑–∏–Ω–∞:",
                       reply_markup=in_kb.go_to_main_menu_keyboard)
        return
    
    await state.update_data(shop_name=message.text)
    
    await state.set_state(UserStates.awaiting_api_key)
    
    photo = FSInputFile("res/images/get_api.jpg")
    
    await message.answer_photo(photo=photo,
                               caption=f"‚òùÔ∏è–ß—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å –∞–∫—Ç—É–∞–ª—å–Ω—ã–π —Ç–æ–∫–µ–Ω –≤ –º–∞–≥–∞–∑–∏–Ω \"{message.text}\", –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —Å–¥–µ–ª–∞—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ —à–∞–≥–æ–≤:\n\n"+
                               "1. –ó–∞–π–¥–∏—Ç–µ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –î–æ—Å—Ç—É–ø –∫ API - https://seller.wildberries.ru/supplier-settings/access-to-api"+
                               "\n\n2. –í—ã–±–µ—Ä–∏—Ç–µ –¢–∏–ø —Ç–æ–∫–µ–Ω–∞ - ¬´–í–æ–ø—Ä–æ—Å—ã –∏ –æ—Ç–∑—ã–≤—ã¬ª\n\n"+
                               "3. –ù–ï —Å—Ç–∞–≤—å—Ç–µ –≥–∞–ª–æ—á–∫—É –≤ –æ–ø—Ü–∏–∏ ¬´–¢–æ–ª—å–∫–æ –¥–ª—è —á—Ç–µ–Ω–∏—è¬ª. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –µ–µ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–µ\n\n"+
                               "4. –ù–∞–∂–º–∏—Ç–µ ¬´–°–æ–∑–¥–∞—Ç—å¬ª\n\n–ü–æ—Å–ª–µ —ç—Ç–æ–≥–æ –≤–≤–µ–¥–∏—Ç–µ —Å–æ–∑–¥–∞–Ω–Ω—ã–π —Ç–æ–∫–µ–Ω –≤ –ø–æ–ª–µ –Ω–∏–∂–µ ‚¨áÔ∏è\n\n"+
                               "–í—Å–µ —Ç–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –º–∞–≥–∞–∑–∏–Ω–∞ —Å–æ—Ö—Ä–∞–Ω—è—Ç—Å—èüëå",
                               reply_markup=in_kb.go_back_from_api_keyboard)
    
    
@router_shop.message(UserStates.awaiting_api_key)
async def got_api_key(message : Message, state: FSMContext):

    if not await is_valid_api_key(message.text):
        await message.answer(text="API-–∫–ª—é—á –≤–≤–µ–¥—ë–Ω –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!\n\n"+
                             "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑: ",
                             reply_markup=in_kb.go_back_from_api_keyboard)
        return
    
    data = await state.get_data()
    
    if not await set_api_key(message.chat.id, data["shop_name"], message.text):
        await delete_shop_if_null(message.from_user.id)
        await message.answer(text="–ü—Ä–æ–∏–∑–æ—à–ª–∞ –≤–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤–≤–æ–¥–µ api_key\n\n"+
                             "–í–µ—Ä–æ—è—Ç–Ω–∞—è –ø—Ä–∏—á–∏–Ω–∞ –æ—à–∏–±–∫–∏: API-–∫–ª—é—á–∏ —É–∂–µ –∑–∞—Ä–µ–≥–µ—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω\n"+
                             "–ò–∑–≤–∏–Ω–∏—Ç–µ –∑–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ –Ω–µ—É–¥–æ–±—Å—Ç–≤–∞, –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–∑–¥–Ω–µ–µ...",
                             reply_markup=in_kb.go_to_main_menu_keyboard)
        await state.clear()
        await state.set_state(UserStates.menu)
        return
    
    await state.update_data(api_key=message.text)
    await state.set_state(UserStates.awaiting_rating)
    
    await message.answer(text=f"–£—Ä–∞, –ú–∞–≥–∞–∑–∏–Ω \"{data["shop_name"]}\" —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ωüéâ\n\n"+
                        "–ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ –≥–∏–±–∫–æ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å, –∫–∞–∫ –±–æ—Ç –±—É–¥–µ—Ç –æ—Ç–≤–µ—á–∞—Ç—å –Ω–∞ –≤–∞—à–∏ –æ—Ç–∑—ã–≤—ã, –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –∏—Ö –æ—Ü–µ–Ω–∫–∏.\n\n"+
                        "–ù–∞–ø—Ä–∏–º–µ—Ä\n\n–í—ã –º–æ–∂–µ—Ç–µ –≤—ã–±—Ä–∞—Ç—å, —á—Ç–æ–±—ã –Ω–∞ –≤—Å–µ –æ—Ç–∑—ã–≤—ã —Å –æ—Ü–µ–Ω–∫–æ–π 5 –∏ 4 –∑–≤–µ–∑–¥—ã –±–æ—Ç –æ—Ç–≤–µ—á–∞–ª –≤ –ø–æ–ª–Ω–æ—Å—Ç—å—é –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–º —Ä–µ–∂–∏–º–µ.\n\n"+
                        "–ù–∞ –≤—Å–µ –æ—Å—Ç–∞–ª—å–Ω—ã–µ –æ—Ç–∑—ã–≤—ã [—Å –æ—Ü–µ–Ω–∫–∞–º–∏ 3, 2, 1 –∑–≤–µ–∑–¥–∞] –±–æ—Ç –±—É–¥–µ—Ç —Å–æ–∑–¥–∞–≤–∞—Ç—å –æ—Ç–≤–µ—Ç, –Ω–æ –±—É–¥–µ—Ç –ø—Ä–∏—Å—ã–ª–∞—Ç—å –≤–∞–º –Ω–∞ —Å–æ–≥–ª–∞—Å–æ–≤–∞–Ω–∏–µ.\n\n"+
                        "–í—ã–±–µ—Ä–∏—Ç–µ –Ω–∞ –∫–∞–∫–∏–µ –æ—Ç–∑—ã–≤—ã –æ—Ç–≤–µ—á–∞—Ç—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏?)",
                        reply_markup=in_kb.setting_ratings_keyboard)
    
    
@router_shop.callback_query(F.data == cb.select_all_ratings)
async def got_ratings(callback_query: CallbackQuery, state: FSMContext):
    data = await state.get_data()
    
    await set_rating(callback_query.from_user.id, data["shop_name"], cb.select_all_ratings)

    await callback_query.message.edit_text(text="–ü—Ä–∏–Ω—è—Ç–æ, –ë–æ—Å—Å)\n\n–ü–æ—à–µ–ª —Ä–∞–±–æ—Ç–∞—Ç—å!",
                                        reply_markup=in_kb.starting_keyboard)
    await callback_query.answer()
    
    await state.clear()
    await state.set_state(UserStates.menu)
    

@router_shop.callback_query(F.data == cb.select_gt2_ratings)
async def got_ratings(callback_query: CallbackQuery, state: FSMContext):
    data = await state.get_data()
    
    await set_rating(callback_query.from_user.id, data["shop_name"], cb.select_gt2_ratings)

    await callback_query.message.edit_text(text="–ü—Ä–∏–Ω—è—Ç–æ, –ë–æ—Å—Å)\n\n–ü–æ—à–µ–ª —Ä–∞–±–æ—Ç–∞—Ç—å!",
                                        reply_markup=in_kb.starting_keyboard)
    await callback_query.answer()
    
    await state.clear()
    await state.set_state(UserStates.menu)
    
    
@router_shop.callback_query(F.data == cb.select_gt3_ratings)
async def got_ratings(callback_query: CallbackQuery, state: FSMContext):
    data = await state.get_data()
    
    await set_rating(callback_query.from_user.id, data["shop_name"], cb.select_gt3_ratings)

    await callback_query.message.edit_text(text="–ü—Ä–∏–Ω—è—Ç–æ, –ë–æ—Å—Å)\n\n–ü–æ—à–µ–ª —Ä–∞–±–æ—Ç–∞—Ç—å!",
                                        reply_markup=in_kb.starting_keyboard)
    await callback_query.answer()
    
    await state.clear()
    await state.set_state(UserStates.menu)
    
    
@router_shop.callback_query(F.data == cb.select_gt4_ratings)
async def got_ratings(callback_query: CallbackQuery, state: FSMContext):
    data = await state.get_data()
    
    await set_rating(callback_query.from_user.id, data["shop_name"], cb.select_gt4_ratings)

    await callback_query.message.edit_text(text="–ü—Ä–∏–Ω—è—Ç–æ, –ë–æ—Å—Å)\n\n–ü–æ—à–µ–ª —Ä–∞–±–æ—Ç–∞—Ç—å!",
                                        reply_markup=in_kb.starting_keyboard)
    await callback_query.answer()
    
    await state.clear()
    await state.set_state(UserStates.menu)
    
    
@router_shop.callback_query(UserStates.shop_list, F.data[:5] == "shop_")    
async def shop_chosen(callback_query: CallbackQuery, state: FSMContext):
    await state.set_state(UserStates.awaiting_rating)
    
    _shop_name = callback_query.data[5:]
    
    await state.update_data(shop_name=_shop_name)
    
    await callback_query.message.edit_text(text=f"–£—Ä–∞, –ú–∞–≥–∞–∑–∏–Ω \"{_shop_name}\" —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ωüéâ\n\n"+
                        "–ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ –≥–∏–±–∫–æ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å, –∫–∞–∫ –±–æ—Ç –±—É–¥–µ—Ç –æ—Ç–≤–µ—á–∞—Ç—å –Ω–∞ –≤–∞—à–∏ –æ—Ç–∑—ã–≤—ã, –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –∏—Ö –æ—Ü–µ–Ω–∫–∏.\n\n"+
                        "–ù–∞–ø—Ä–∏–º–µ—Ä\n\n–í—ã –º–æ–∂–µ—Ç–µ –≤—ã–±—Ä–∞—Ç—å, —á—Ç–æ–±—ã –Ω–∞ –≤—Å–µ –æ—Ç–∑—ã–≤—ã —Å –æ—Ü–µ–Ω–∫–æ–π 5 –∏ 4 –∑–≤–µ–∑–¥—ã –±–æ—Ç –æ—Ç–≤–µ—á–∞–ª –≤ –ø–æ–ª–Ω–æ—Å—Ç—å—é –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–º —Ä–µ–∂–∏–º–µ.\n\n"+
                        "–ù–∞ –≤—Å–µ –æ—Å—Ç–∞–ª—å–Ω—ã–µ –æ—Ç–∑—ã–≤—ã [—Å –æ—Ü–µ–Ω–∫–∞–º–∏ 3, 2, 1 –∑–≤–µ–∑–¥–∞] –±–æ—Ç –±—É–¥–µ—Ç —Å–æ–∑–¥–∞–≤–∞—Ç—å –æ—Ç–≤–µ—Ç, –Ω–æ –±—É–¥–µ—Ç –ø—Ä–∏—Å—ã–ª–∞—Ç—å –≤–∞–º –Ω–∞ —Å–æ–≥–ª–∞—Å–æ–≤–∞–Ω–∏–µ.\n\n"+
                        "–í—ã–±–µ—Ä–∏—Ç–µ –Ω–∞ –∫–∞–∫–∏–µ –æ—Ç–∑—ã–≤—ã –æ—Ç–≤–µ—á–∞—Ç—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏?)",
                        reply_markup=in_kb.setting_ratings_keyboard)
    
    await callback_query.answer()
    
    
@router_shop.callback_query(F.data==cb.delete_shop)
async def del_shop(callback_query: CallbackQuery, state: FSMContext):
    await callback_query.message.edit_text(text="–í—ã–±–µ—Ä–∏—Ç–µ –º–∞–≥–∞–∑–∏–Ω, –∫–æ—Ç–æ—Ä—ã–π —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å",
                                           reply_markup=await in_kb.shop_list_build_manage(callback_query.from_user.id))
    await callback_query.answer()
    
    await state.set_state(UserStates.chosen_to_delete)
    
    
@router_shop.callback_query(UserStates.chosen_to_delete)
async def del_shop(callback_query: CallbackQuery, state: FSMContext):
    shop_to_delete = callback_query.data[5:]
    
    if not await delete_shop(callback_query.from_user.id, shop_to_delete):
        await callback_query.message.answer(text="–ü–æ –∫–∞–∫–æ–π-—Ç–æ –ø—Ä–∏—á–∏–Ω–µ —É–¥–∞–ª–µ–Ω–∏–µ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ\n\n"+
                                      "–ò–∑–≤–∏–Ω–∏—Ç–µ –∑–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ –Ω–µ—É–¥–æ–±—Å—Ç–≤–∞, —Ä–∞–∑–±–∏—Ä–∞–µ–º—Å—è...",
                                      reply_markup=in_kb.go_back_from_delete_keyboard)
    
    await state.clear()
    await state.set_state(UserStates.menu)
    
    await callback_query.message.edit_text(text=f"–í—ã —É–¥–∞–ª–∏–ª–∏ –º–∞–≥–∞–∑–∏–Ω \"{shop_to_delete}\".",
                                           reply_markup=in_kb.go_to_main_menu_keyboard)
    await callback_query.answer()